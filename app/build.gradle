apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.blueamber.studentcalendar"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias ''
            keyPassword ''
            storeFile file('../../KEYSTORES/.keystore')
            storePassword ''
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-debug-"
        }
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutinesCore"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesAndroid"

    // android
    implementation "com.android.support:appcompat-v7:$versions.support"
    implementation "com.android.support:cardview-v7:$versions.support"
    implementation "com.android.support.constraint:constraint-layout:$versions.constraintLayout"
    implementation("com.android.support:customtabs:$versions.support") {
        exclude group: 'com.android.support'
    }
    implementation "com.android.support:design:$versions.support"
    implementation "com.android.support:recyclerview-v7:$versions.support"

    // dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // easy prefs
    implementation "com.pixplicity.easyprefs:library:$versions.easyPrefs"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // lifecycle
    implementation "android.arch.lifecycle:extensions:$versions.lifecycle"
    kapt "android.arch.lifecycle:compiler:$versions.lifecycle"

    // okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okHttp"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-simplexml:$versions.retrofit"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:$versions.retroCoroutines"

    // room
    implementation "android.arch.persistence.room:runtime:$versions.room"
    kapt "android.arch.persistence.room:compiler:$versions.room"

    // tests
    testImplementation "junit:junit:4.12"
    androidTestImplementation "com.android.support.test:runner:$versions.runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$versions.espresso"
}
